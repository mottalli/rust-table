@0xfe52ae551973a120;        # Generated by `capnp id`

enum Encoding {
    raw @0;
    delta @1;
    rle  @2;
}

enum Compression {
    none @0;
    snappy @1;
}

struct ColumnChunkHeader {
    relativeOffset @0 :Int64;
    compressedSize @1 :Int32;
    uncompressedSize @2 :Int32;
    encoding @3 :Encoding;
    compression @4 :Compression;
}

struct StripeHeader {
    numRows @0: Int32;
    columnChunks @1 :List(ColumnChunkHeader);
}

struct Storage {
    version @0 :Int16;
    numRows @1 :Int64;
    columns @2 :List(Column);
    stripes @3: List(Stripe);
    metadata @4 :List(Metadata);

    struct Stripe {
        absoluteOffset @0 :Int64;
        numRows @1 :Int64;
    }

    struct ColumnChunk {
        encoding @0 :Encoding;
        compression @1 :Compression;
    }

    struct SortColumn {
        columnIdx @0 :Int32;
        ascending @1 :Bool = true;
    }

    struct Metadata {
        key @0 :Text;
        value @1 :Data;
    }

    struct Column {
        name @0 :Text;
        type @1 :ColumnType;

        # Only for type = fixed_len
        size @2 :Int32 = 0;

        nullable @3 :Bool = true;
        primaryKey @4 :Bool = false;
        indexed @5 :Bool = false;

        metadata @6 :List(Metadata);

        enum ColumnType {
            boolean @0;
            byte @1;
            int32 @2;
            int64 @3;
            float @4;
            double @5;
            utf8 @6;
            fixedLen @7;
        }
    }
}
